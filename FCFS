import java.util.Scanner;

public class FCFS {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        
        System.out.println("Enter the number of processes:");
        int numberOfProcesses = in.nextInt();
        
        int pid[] = new int[numberOfProcesses];
        int bt[] = new int[numberOfProcesses];
        int ar[] = new int[numberOfProcesses];
        int ct[] = new int[numberOfProcesses];
        int ta[] = new int[numberOfProcesses];
        int wt[] = new int[numberOfProcesses];

        // Input arrival times and burst times
        for(int i = 0; i < numberOfProcesses; i++) {
            System.out.println("Enter process " + (i+1) + " arrival time: ");
            ar[i] = in.nextInt();
            System.out.println("Enter process " + (i+1) + " burst time: ");
            bt[i] = in.nextInt();
            pid[i] = i + 1;
        }

        // Sorting based on arrival time
        for (int i = 0; i < numberOfProcesses; i++) {
            for (int j = i + 1; j < numberOfProcesses; j++) {
                if (ar[i] > ar[j]) {
                    // Swap arrival times
                    int temp = ar[i];
                    ar[i] = ar[j];
                    ar[j] = temp;

                    // Swap process IDs
                    temp = pid[i];
                    pid[i] = pid[j];
                    pid[j] = temp;

                    // Swap burst times
                    temp = bt[i];
                    bt[i] = bt[j];
                    bt[j] = temp;
                }
            }
        }

        // Calculating completion times, turnaround times, and waiting times
        ct[0] = bt[0] + ar[0];
        for (int i = 1; i < numberOfProcesses; i++) {
            if (ar[i] > ct[i - 1]) {
                ct[i] = ar[i] + bt[i];
            } else {
                ct[i] = ct[i - 1] + bt[i];
            }
        }

        for (int i = 0; i < numberOfProcesses; i++) {
            ta[i] = ct[i] - ar[i];  // Turnaround time
            wt[i] = ta[i] - bt[i];  // Waiting time
        }

        // Output table
        System.out.println("\nProcess\tAT\tBT\tCT\tTAT\tWT");
        for (int i = 0; i < numberOfProcesses; i++) {
            System.out.println("P" + pid[i] + "\t" + ar[i] + "\t" + bt[i] + "\t" + ct[i] + "\t" + ta[i] + "\t" + wt[i]);
        }

        // Gantt chart
        System.out.println("\nGantt Chart:");
        for (int i = 0; i < numberOfProcesses; i++) {
            System.out.print("P" + pid[i] + " ");
        }

        in.close();
    }
}

